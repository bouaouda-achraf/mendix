// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package eventmanagement.proxies;

public class Feedback
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject feedbackMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EventManagement.Feedback";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Date("Date"),
		Response("Response"),
		Rating("Rating"),
		Feedback_Attendee("EventManagement.Feedback_Attendee"),
		Feedback_Session("EventManagement.Feedback_Session");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Feedback(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EventManagement.Feedback"));
	}

	protected Feedback(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject feedbackMendixObject)
	{
		if (feedbackMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EventManagement.Feedback", feedbackMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EventManagement.Feedback");

		this.feedbackMendixObject = feedbackMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Feedback.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static eventmanagement.proxies.Feedback initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return eventmanagement.proxies.Feedback.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static eventmanagement.proxies.Feedback initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new eventmanagement.proxies.Feedback(context, mendixObject);
	}

	public static eventmanagement.proxies.Feedback load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return eventmanagement.proxies.Feedback.initialize(context, mendixObject);
	}

	public static java.util.List<eventmanagement.proxies.Feedback> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<eventmanagement.proxies.Feedback> result = new java.util.ArrayList<eventmanagement.proxies.Feedback>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EventManagement.Feedback" + xpathConstraint))
			result.add(eventmanagement.proxies.Feedback.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Date
	 */
	public final java.util.Date getDate()
	{
		return getDate(getContext());
	}

	/**
	 * @param context
	 * @return value of Date
	 */
	public final java.util.Date getDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Date.toString());
	}

	/**
	 * Set value of Date
	 * @param date
	 */
	public final void setDate(java.util.Date date)
	{
		setDate(getContext(), date);
	}

	/**
	 * Set value of Date
	 * @param context
	 * @param date
	 */
	public final void setDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date date)
	{
		getMendixObject().setValue(context, MemberNames.Date.toString(), date);
	}

	/**
	 * @return value of Response
	 */
	public final java.lang.String getResponse()
	{
		return getResponse(getContext());
	}

	/**
	 * @param context
	 * @return value of Response
	 */
	public final java.lang.String getResponse(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Response.toString());
	}

	/**
	 * Set value of Response
	 * @param response
	 */
	public final void setResponse(java.lang.String response)
	{
		setResponse(getContext(), response);
	}

	/**
	 * Set value of Response
	 * @param context
	 * @param response
	 */
	public final void setResponse(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String response)
	{
		getMendixObject().setValue(context, MemberNames.Response.toString(), response);
	}

	/**
	 * @return value of Rating
	 */
	public final java.lang.Integer getRating()
	{
		return getRating(getContext());
	}

	/**
	 * @param context
	 * @return value of Rating
	 */
	public final java.lang.Integer getRating(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Rating.toString());
	}

	/**
	 * Set value of Rating
	 * @param rating
	 */
	public final void setRating(java.lang.Integer rating)
	{
		setRating(getContext(), rating);
	}

	/**
	 * Set value of Rating
	 * @param context
	 * @param rating
	 */
	public final void setRating(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer rating)
	{
		getMendixObject().setValue(context, MemberNames.Rating.toString(), rating);
	}

	/**
	 * @return value of Feedback_Attendee
	 */
	public final eventmanagement.proxies.Attendee getFeedback_Attendee() throws com.mendix.core.CoreException
	{
		return getFeedback_Attendee(getContext());
	}

	/**
	 * @param context
	 * @return value of Feedback_Attendee
	 */
	public final eventmanagement.proxies.Attendee getFeedback_Attendee(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		eventmanagement.proxies.Attendee result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Feedback_Attendee.toString());
		if (identifier != null)
			result = eventmanagement.proxies.Attendee.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Feedback_Attendee
	 * @param feedback_attendee
	 */
	public final void setFeedback_Attendee(eventmanagement.proxies.Attendee feedback_attendee)
	{
		setFeedback_Attendee(getContext(), feedback_attendee);
	}

	/**
	 * Set value of Feedback_Attendee
	 * @param context
	 * @param feedback_attendee
	 */
	public final void setFeedback_Attendee(com.mendix.systemwideinterfaces.core.IContext context, eventmanagement.proxies.Attendee feedback_attendee)
	{
		if (feedback_attendee == null)
			getMendixObject().setValue(context, MemberNames.Feedback_Attendee.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Feedback_Attendee.toString(), feedback_attendee.getMendixObject().getId());
	}

	/**
	 * @return value of Feedback_Session
	 */
	public final eventmanagement.proxies.Session getFeedback_Session() throws com.mendix.core.CoreException
	{
		return getFeedback_Session(getContext());
	}

	/**
	 * @param context
	 * @return value of Feedback_Session
	 */
	public final eventmanagement.proxies.Session getFeedback_Session(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		eventmanagement.proxies.Session result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Feedback_Session.toString());
		if (identifier != null)
			result = eventmanagement.proxies.Session.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Feedback_Session
	 * @param feedback_session
	 */
	public final void setFeedback_Session(eventmanagement.proxies.Session feedback_session)
	{
		setFeedback_Session(getContext(), feedback_session);
	}

	/**
	 * Set value of Feedback_Session
	 * @param context
	 * @param feedback_session
	 */
	public final void setFeedback_Session(com.mendix.systemwideinterfaces.core.IContext context, eventmanagement.proxies.Session feedback_session)
	{
		if (feedback_session == null)
			getMendixObject().setValue(context, MemberNames.Feedback_Session.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Feedback_Session.toString(), feedback_session.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return feedbackMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final eventmanagement.proxies.Feedback that = (eventmanagement.proxies.Feedback) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EventManagement.Feedback";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
